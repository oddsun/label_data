[tool.poetry]
name = "label-data"
version = "0.1.0"
description = ""
authors = ["odd <1161465+oddsun@users.noreply.github.com>"]
readme = "README.md"
packages = [{ include = "label_data" }]

[tool.poetry.dependencies]
python = "^3.8.1"
fastapi = "^0.96.0"
aiofiles = "^23.1.0"
alembic = "^1.10.4"
uvicorn = "^0.22.0"
sqlalchemy = "^2.0.12"
pandas = "^2.0.1"
python-dotenv = "^1.0.0"
jinja2 = "^3.1.2"
python-multipart = "^0.0.6"
more-itertools = "^9.1.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
black = "^23.3.0"
flake8 = "^6.0.0"
ruff = "^0.0.277"
isort = "^5.12.0"
mypy = "^1.3.0"
pre-commit = "^3.3.1"
pytest-cov = "^4.0.0"
tox = "^4.5.1"
httpx = "^0.24.0"


[tool.poetry.group.d.dependencies]
exceptiongroup = "^1.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--junitxml=pytest.xml --cov=label_data --cov-report term --cov-report html --cov-report xml:coverage.xml"
pythonpath = "label_data"
testpaths = ["tests"]

[tool.ruff]
line-length = 88
select = ["F", "E", "W", "I001"]
fix = true
show-fixes = true

[tool.ruff.isort]
#force-single-line = true
known-first-party = ["label_data"]

[tool.isort]
#force_single_line = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
known_first_party = ["label_data"]

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
ignore_missing_imports = true

[tool.coverage.run]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:"
]
